" Very nice collection of vim tips
" http://stackoverflow.com/questions/164847/what-is-in-your-vimrc
" http://stevelosh.com/blog/2010/09/coming-home-to-vim/?
" List usefull vim plugins
" http://mirnazim.org/writings/vim-plugins-i-use/
" http://www.vimninjas.com/2012/09/03/5-plugins-you-should-put-in-your-vimrc/
" Vim tips: http://www.cs.swarthmore.edu/help/vim/home.html
"
" daw -- delete a word under cursor
" caw -- delete a word under cursor and put into insert mode
" see more with :help text-object
" for instance vaw, vas, etc. commands
" :set spell
" it uses the following commands, [s for next misspelled word, z= to give list
" of choices
"
" Reformat paragraph
" select paragraph with Visual mode
" gq  - reformat paragraph

" pathogen plugin
filetype off
"runtime bundle/vim-pathogen/autoload/pathogen.vim
call pathogen#infect()
"call pathogen#runtime_append_all_bundles()
syntax on
filetype plugin indent on

" ----------------------- Custom settings ---------------------
set nocompatible
set autoindent
set laststatus=2
set modelines=0
set nohlsearch
set backup
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set ignorecase
set smartcase
set gdefault
"set incsearch
set showcmd
set showmatch
set hlsearch
set encoding=utf-8
set showmode
set hidden
set ttyfast
set ruler
"set relativenumber
set undofile
set wrap
set textwidth=79
"set formatoptions=qrn1
set formatoptions-=cro
"set colorcolumn=85
set backspace=indent,eol,start
"set foldmethod=marker
" keep all folds open all the time
set foldlevel=99
set wildmenu
set wildmode=list:longest,full
"--------------------------------------------
" PLEASE note VK 01/09/13: I found that autocompletion
" quite often stuck, especially in snippets mode, so I'll disable it
" set autocompletion to read from dictionary
" see more http://vim.wikia.com/wiki/Dictionary_completions
"set dictionary-=/usr/share/dict/words dictionary+=/usr/share/dict/words
"set complete-=k complete+=k
"--------------------------------------------
":retab
":map <F12> :set number!<CR>
":set spell
set fillchars+=stl:\ ,stlnc:\
" color settings, using 256 I get red definitions of defs in python
" using 16 I get correct yellow definitions of defs and correct PowerLine bar
set t_Co=256
"set t_Co=16

au FocusLost * :wa
"au BufNewFile,BufRead *.yaml,*.yml so ~/.vim/plugin/yaml.vim
au BufRead,BufNewFile *.txt setfiletype text
autocmd FileType text setlocal tw=80 fo=ltc
" Enable spell check for text files
"if v:version >= 700
"    autocmd BufNewFile,BufRead *.txt setlocal spell spelllang=en
"endif

" Highlight current line
"set cul
hi CursorLine term=none cterm=none ctermbg=7

" ----------------------- Custom let-ings ---------------------
" remap ESC key
inoremap jj <ESC>
" set my leader key
let mapleader = "\\"
" Erlang settings
let g:erlangFold=0
let g:snips_author = 'Valentin Kuznetsov <vkuznet@gmail.com>'
" Powerline settings
"let g:Powerline_symbols = 'unicode'
"let g:Powerline_symbols = 'fancy'
let g:Powerline_symbols = 'compatible'

" css settings
"let g:cssColorVimDoNotMessMyUpdatetime = 1

" ----------------------- Custom mappings ---------------------
" toggle paste outside INSERT mode "
map <Leader>p :set invpaste<CR>:set paste?<CR>
" toggle paste in INSERT mode "
set pastetoggle=<leader>p
" use space to clear up highlights
nnoremap <leader><space> :noh<cr>
nnoremap <leader>nt :NERDTree<cr>
" open snippet file
nnoremap <leader>snip :e ~/.vim/bundle/snipmate-snippets/snippets/
" use tab for jumping around brackets
nnoremap <tab> %
vnoremap <tab> %
" paste from system clipboard
nnoremap <leader>vv "*p<CR>
" remove all white spaces at the end of the lines in a file
nnoremap <leader>W :%s/\s\+$//<cr>:let @/=''<CR>
"nnoremap <leader>S ?{<CR>jV/^\s*\}?$<CR>k:sort<CR>:noh<CR>
"nnoremap <leader>S ?{<CR>jV/^\s*\}?$<CR>:sort<CR>:noh<CR>
"nnoremap <leader>S :sort<CR>:noh<CR>
" enter spell check
nnoremap <leader>sp :setlocal spell spelllang=en_us<CR>:set spell<CR>
nnoremap <leader>ns :set nospell<CR>
" select visual block from the current line till the end of file
"nnoremap <leader>v V`]
" vertical split and open up vimrc file
nnoremap <leader>vimrc <C-w><C-v><C-l>:e $MYVIMRC<cr>
" vertical split
nnoremap <leader>v <C-w>v<C-w>l
" horizontal split
nnoremap <leader>h <C-w>s<C-w>l
" run ack
nnoremap <leader>a :Ack
" undo plugin
nnoremap <leader>undo :GundoToggle<CR>
" useful save/quit
nnoremap <leader>wq :wq!<CR>
nnoremap <leader>q :q!<CR>
" tagbar key
"nnoremap <leader>t :TagbarToggle<CR>
nnoremap <leader>t :TagbarOpenAutoClose<CR>
"nnoremap <leader>ct :!/opt/local/bin/ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" walk around location list (syntastic plugin store errors over there)
nnoremap <leader>ll :ll<CR>
nnoremap <leader>ln :lnext<CR>
nnoremap <leader>lp :lprev<CR>

" fold tag
nnoremap <leader>ft Vatzf
" Vim folding commands
" https://www.linux.com/learn/tutorials/442438-vim-tips-folding-fun
"zf#j creates a fold from the cursor down # lines.
"zf/string creates a fold from the cursor to string .
"zj moves the cursor to the next fold.
"zk moves the cursor to the previous fold.
"zo opens a fold at the cursor.
"zO opens all folds at the cursor.
"zm increases the foldlevel by one.
"zM closes all open folds.
"zr decreases the foldlevel by one.
"zR decreases the foldlevel to zero -- all folds will be open.
"zR open all folds
"zd deletes the fold at the cursor.
"zE deletes all folds.
"[z move to start of open fold.
"]z move to end of open fold.

"Useful commands
"zR	Unfold all folded lines in file.
"za	Open/close (toggle) a folded group of lines.
"zA	Open a closed fold or close an open fold recursively.
"zc	Close a folded group of lines.
"zC	Close all folded lines recursively.
"zd	Delete a folded line.
"zD	Delete all folded lines recursively.
"zE	Eliminate all folded lines in file.
"zF	Create N-folded lines.
"
" -----------------------------------------------------------
" I use C-Left/Right to switch between OSX spaces, once I'll upgrade to Lion
" I need to check if I can put back the mapping in vim
" here <silent> â€“ tells vim not to echo to the statusline what its doing during
" the execution of the mapping.
" Next buffer
nnoremap <leader>n :bnext<CR>
nnoremap <leader>b :bprev<CR>
nnoremap <leader>d :bdelete<CR>
nnoremap <leader><leader><space> :buffers<CR>:buffer<Space>
"nnoremap <leader>wc :bdelete<CR>
" Next Tab
nnoremap <silent> <C-n> :tabnext<CR>
" Previous Tab
nnoremap <silent> <C-p> :tabprevious<CR>
" New Tab
nnoremap <silent> <C-t> :tabnew<CR>
" move-up to next window
nnoremap <silent> <C-k> :wincmd k<CR>
" move-down to next window
nnoremap <silent> <C-j> :wincmd j<CR>
" move-left to next window
nnoremap <silent> <C-h> :wincmd h<CR>
" move-right to next window
nnoremap <silent> <C-l> :wincmd l<CR>
" move-up, use shift-key plus k
nnoremap <silent> <S-k> <C-U><C-U>
" move-down, use shift-key plus j
nnoremap <silent> <S-j> <C-D><C-D>
" -----------------------------------------------------------

" ----------------------- Custom colors ---------------------
" COLORS
" color scheme
" colorscheme molokai.vim
" -----------------------------------------------------------
"
" ----------------------- Syntatstic settings ---------------
let g:syntastic_mode_map = {'mode':'passive', 'active_filetypes':[], 'passive_filetypes':[]}
nnoremap <leader>sc :SyntasticCheck<CR>

highlight   clear
highlight   Pmenu         ctermfg=0 ctermbg=2
highlight   PmenuSel      ctermfg=0 ctermbg=7
highlight   PmenuSbar     ctermfg=7 ctermbg=0
highlight   PmenuThumb    ctermfg=0 ctermbg=7
"set tags+=~/.vim/tags/stl

" Complete options (disable preview scratch window)
set completeopt=menu,menuone,longest
" Limit popup menu height
"set pumheight = 15
 
" SuperTab option for context aware completion
let g:SuperTabDefaultCompletionType = "context"
 
" Disable auto popup, use <Tab> to autocomplete
let g:clang_complete_auto = 0
" Show clang errors in the quickfix window
let g:clang_complete_copen = 1
let g:clang_use_library = 1
let g:clang_library_path = "/opt/local/libexec/llvm-3.3/lib/"
let g:clang_exec = '"/opt/local/bin/clang++ -std=c++11 -x c++'
let g:clang_user_options = '2> NUL || exit 0"'

" r-plugin
let vimrplugin_screenplugin = 0

" abbreviations
:iabbrev adn and
:iabbrev waht what
:iabbrev tehn then
:iabbrev @@ vkuznet@gmail.com
:iabbrev ccopy Copyright 2013 Valentin Kuznetsov, all rights reserved.
